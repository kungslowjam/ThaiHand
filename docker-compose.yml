version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: thaihand_postgres
    environment:
      POSTGRES_DB: thaihand_db
      POSTGRES_USER: thaihand_user
      POSTGRES_PASSWORD: thaihand_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./alembic:/alembic
    ports:
      - "5432:5432"
    networks:
      - thaihand_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: thaihand_backend
    environment:
      - DATABASE_URL=postgresql://thaihand_user:thaihand_password@postgres:5432/thaihand_db
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=False
      - ALLOWED_ORIGINS=https://thaihand.shop,https://www.thaihand.shop,http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - thaihand_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - /app/__pycache__

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: thaihand_frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://thaihand.shop/api
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://thaihand.shop
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - LINE_CLIENT_ID=${LINE_CLIENT_ID}
      - LINE_CLIENT_SECRET=${LINE_CLIENT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - thaihand_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: thaihand_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - thaihand_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  thaihand_network:
    driver: bridge 